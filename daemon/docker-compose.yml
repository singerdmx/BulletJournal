version: '2.1'
services:
  daemon:
    container_name: daemon_app
    image: bulletjournal-daemon:latest
    build:
      context: .
    ports:
      - "50051:50051"
    depends_on:
      cache:
        condition: service_started
      database:
        condition: service_healthy
    environment: 
      tier : prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://daemon:9091/daemon/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis
    container_name: cache
    ports:
      - "127.0.0.1:6379:6379"

  database:
    image: mwangxx/postgres:12.2-2
    container_name: db
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: postgres
    volumes:
      - $HOME/docker/volumes/postgres:/var/lib/postgresql/data
      - $HOME/docker/volumes/db_backup:/var/db_backup
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin:/root/.pgadmin
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped

  # Disabled backend controller
  controller:
    image: mwangxx/bulletjournal-backend:latest
    container_name: springboot_app
    ports:
      - "8080:8080"
    environment:
      spring_profiles_active: dev
    volumes:
      - $HOME/docker/volumes/log:/var/log
    depends_on:
      database:
        condition: service_healthy
      daemon:
        condition: service_healthy
    # Remove lines below to enable spring boot container
    command: "true"
    entrypoint: "true"
volumes:
    pgadmin: